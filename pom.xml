<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.avanza.ymer</groupId>
	<artifactId>ymer-parent</artifactId>
	<version>2.0.13-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>
	<description>${project.artifactId}</description>
	<url>https://github.com/AvanzaBank/ymer</url>
	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Elias Lindholm</name>
			<email>elias.lindholm@avanza.se</email>
			<organization>Avanza</organization>
			<organizationUrl>https://github.com/AvanzaBank</organizationUrl>
		</developer>
  	</developers>
	<scm>
	  <connection>scm:git:git@github.com:AvanzaBank/ymer.git</connection>
	  <developerConnection>scm:git:git@github.com:AvanzaBank/ymer.git</developerConnection>
	  <url>git@github.com:AvanzaBank/ymer.git</url>
	</scm>
	<repositories>
		<repository>
			<id>gigaspaces</id>
			<name>GigaSpaces</name>
			<url>https://gigaspaces-maven-repository-eu.s3.amazonaws.com/</url>
		</repository>
	</repositories>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>ymer</module>
				<module>ymer-test</module>
				<module>ymer-test-junit4</module>
				<module>ymer-test-junit5</module>
				<module>examples</module>
			</modules>
   		</profile>
		<profile>
			<id>release</id>
			<modules>
				<module>ymer</module>
				<module>ymer-test</module>
				<module>ymer-test-junit4</module>
				<module>ymer-test-junit5</module>
			</modules>
			<build>
				<!--  javadoc, source and gpg plugin from above -->
							<!-- All artifacts deployed to the central repository must be signed -->
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
	
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
				</plugin>
				<plugin>
				  <groupId>org.sonatype.plugins</groupId>
				  <artifactId>nexus-staging-maven-plugin</artifactId>
				  <extensions>true</extensions>
				  <configuration>
				     <serverId>ossrh</serverId>
				     <nexusUrl>https://oss.sonatype.org/</nexusUrl>
				     <autoReleaseAfterClose>true</autoReleaseAfterClose>
				  </configuration>
				</plugin>
			</plugins>
			</build>
		</profile>
	</profiles>

	<properties>
		<!-- -none ignores validation errors in javadoc -->
		<doclint>none</doclint>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>11</java.version>

		<spring.version>5.1.7.RELEASE</spring.version>
		<spring-data-mongodb.version>2.1.8.RELEASE</spring-data-mongodb.version>

		<slf4j.version>1.7.32</slf4j.version>
		<log4j.version>2.17.1</log4j.version>
		<gigaspaces.version>14.5.0</gigaspaces.version>
		<jsr305.version>3.0.2</jsr305.version>
		<junit.version>4.13.2</junit.version>
		<junit-jupiter.version>5.7.2</junit-jupiter.version>
		<hamcrest.version>2.2</hamcrest.version>
		<mockito.version>3.12.4</mockito.version>
		<gs-test.version>1.0.2</gs-test.version>
		<mongo-java-driver.version>3.8.2</mongo-java-driver.version>
		<testcontainers.version>1.16.2</testcontainers.version>
		<awaitility.version>4.1.0</awaitility.version>
		<assertj.version>3.21.0</assertj.version>
		<system-stubs.version>1.2.0</system-stubs.version>

		<!-- Maven plugins -->
		<maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		<maven-release-plugin.version>3.0.0-M1</maven-release-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-source-plugin.version>3.2.0</maven-source-plugin.version>
		<maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
		<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
		<versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
		<maven-site-plugin.version>3.9.1</maven-site-plugin.version>
		<license-maven-plugin.version>2.11</license-maven-plugin.version>
		<maven-scm-publish-plugin.version>3.0.0</maven-scm-publish-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.7</nexus-staging-maven-plugin.version>
		<maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo-java-driver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-mongodb</artifactId>
				<version>${spring-data-mongodb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.gigaspaces</groupId>
				<artifactId>xap-common</artifactId>
				<version>${gigaspaces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.gigaspaces</groupId>
				<artifactId>xap-openspaces</artifactId>
				<version>${gigaspaces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.gigaspaces</groupId>
				<artifactId>xap-datagrid</artifactId>
				<version>${gigaspaces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
			</dependency>

			<!-- TEST -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hamcrest</groupId>
						<artifactId>hamcrest-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit-jupiter.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.avanza.gs</groupId>
				<artifactId>gs-test</artifactId>
				<version>${gs-test.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
				<type>test-jar</type>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>mongodb</artifactId>
				<version>${testcontainers.version}</version>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${awaitility.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>uk.org.webcompere</groupId>
				<artifactId>system-stubs-core</artifactId>
				<version>${system-stubs.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- define version numbers for all core plugins to have deterministic
					build -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<excludePackageNames>example*:se*</excludePackageNames>
						<aggregate>true</aggregate>
						<show>public</show>
						<nohelp>true</nohelp>
						<header>Ymer Framework ${project.version}</header>
						<footer>Ymer Framework ${project.version}</footer>
						<doctitle>Ymer Framework ${project.version}</doctitle>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven-plugin-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${maven-scm-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<header>src/license/apache2.txt</header>
						<properties>
							<owner>Avanza Bank AB</owner>
							<inceptionYear>2014</inceptionYear>
							<project.inceptionYear>2014</project.inceptionYear>
						</properties>
						<mapping>
							<java>SLASHSTAR_STYLE</java>
						</mapping>
						<includes>
							<include>**/*.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Set default Java source/target -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>${java.version}</release>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<failOnWarning>true</failOnWarning>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>6.2</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Configures jar creation and manifest contents -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- This plugin makes sure that a source jar is always built together
				with the binary jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce</id>
						<phase>validate</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<!-- Require Maven to be v3.5.3 or later -->
						<requireMavenVersion>
							<version>[3.5.3,)</version>
						</requireMavenVersion>
					</rules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<includes>
						<include>com.avanza.ymer*</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*TestCase.java</include>
						<include>**/*Tests.java</include>
					</includes>
					<systemPropertyVariables>
						<!--
						-Djava.net.preferIPv4Stack=true is set since embedded spaces take ages to start on some
						developer machines without it. See also:
						http://stackoverflow.com/questions/30997298/why-is-multicastsocket-setnetworkinterface-much-slower-using-java-8-runtime
						-->
						<java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
						<!--
						Disable GS use of Oshi for detecting machine architecture and operating system
						because the version (3.13.1) used by GS 14.5 does not work with macOS aarch
						-->
						<com.gs.oshi.enabled>false</com.gs.oshi.enabled>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
